apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

ext {
    javaVersion   = '1.7'
    springVersion = '4.0.9.RELEASE'
}

sourceCompatibility = javaVersion 
targetCompatibility = javaVersion
version = '1.0'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8' 

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral() 
}

dependencies {
	compile 'javax.servlet:jstl:1.2', 
				'org.springframework:spring-webmvc:'+springVersion, 
				'org.springframework:spring-jdbc:'+springVersion, 
				'org.springframework:spring-tx:'+springVersion, 
				'org.springframework:spring-orm:'+springVersion, 
				'commons-dbcp:commons-dbcp:1.4', 
				'ch.qos.logback:logback-classic:1.0.6', 
				'org.springframework.data:spring-data-jpa:1.8.0.RELEASE', 
				'org.hibernate:hibernate-entitymanager:4.3.9.Final', 
				'mysql:mysql-connector-java:5.1.35' 			
	providedCompile 'javax.servlet:javax.servlet-api:3.0.1', 
							 'javax.servlet.jsp:jsp-api:2.1'
    testCompile 'junit:junit:4.12', 
    				  'org.springframework:spring-test:'+springVersion
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

eclipse {
    classpath {
        downloadSources = true
    }
    wtp {
        facet {
            facet name: 'jst.web' , version: '3.0.1' // Servlet Spec Version 지정
            facet name: 'jst.java' , version: '1.7' // Java Version 지정, 1.7 ...
        }
    }
}

task initProject << {
sourceSets*.java.srcDirs*.each { it.mkdirs() }
sourceSets*.resources.srcDirs*.each { it.mkdirs() }
def webappDir = "$rootDir/src/main/webapp"
file(webappDir + "/WEB-INF/views").mkdirs()
file(webappDir + "/META-INF").mkdir()
}

tasks.eclipse.dependsOn initProject
